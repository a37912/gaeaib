--- src/distlib/werkzeug/useragents.py.orig	2010-10-27 22:52:24.179483823 +0300
+++ src/distlib/werkzeug/useragents.py	2010-10-27 22:54:16.306138877 +0300
@@ -22,15 +22,16 @@
         (r'darwin|mac|os\s*x', 'macos'),
         ('win', 'windows'),
         (r'android', 'android'),
-        (r'x11|lin(\b|ux)?', 'linux'),
         ('(sun|i86)os', 'solaris'),
         (r'nintendo\s+wii', 'wii'),
         ('irix', 'irix'),
         ('hp-?ux', 'hpux'),
         ('aix', 'aix'),
         ('sco|unix_sv', 'sco'),
+        ('dragonfly', 'dragonfly'),
         ('bsd', 'bsd'),
-        ('amiga', 'amiga')
+        ('amiga', 'amiga'),
+        (r'x11|lin(\b|ux)?', 'linux'),
     )
     browsers = (
         ('googlebot', 'google'),
@@ -40,7 +41,8 @@
         (r'aol|america\s+online\s+browser', 'aol'),
         ('opera', 'opera'),
         ('chrome', 'chrome'),
-        ('firefox|firebird|phoenix|iceweasel', 'firefox'),
+        ('firefox|firebird|phoenix|iceweasel|namoroka|minefield', 'firefox'),
+        ('midoru', 'midori'),
         ('galeon', 'galeon'),
         ('safari', 'safari'),
         ('webkit', 'webkit'),
@@ -51,10 +53,25 @@
         (r'msie|microsoft\s+internet\s+explorer', 'msie'),
         ('lynx', 'lynx'),
         ('links', 'links'),
-        ('seamonkey|mozilla', 'seamonkey')
+        ('seamonkey|mozilla', 'seamonkey'),
+        ('wget|curl', 'cli'),
+    )
+
+    cpus = (
+      ('(ppc|powerpc)', 'powerpc'),
+      ('(ppc64|powerpc64)', 'powerpc64'),
+      ('(sparc|sun)', 'sparc'),
+      ('sparc64', 'sparc64'),
+      ('mips', 'mips'),
+      ('dec', 'alpha'),
+      ('alpha', 'alpha'),
+      ('((i[346]|x)86|Intel Mac)', 'x86'),
+      ('(x86_|amd|x)64', 'amd64'),
+      ('arm|gnueabi', 'arm'),
     )
 
     _browser_version_re = r'(?:%s)[/\sa-z(]*(\d+[.\da-z]+)?(?i)'
+    _cpu_re = r'\([^;]*;[^\)]*%s'
     _language_re = re.compile(
         r'(?:;\s*|\s+)(\b\w{2}\b(?:-\b\w{2}\b)?)\s*;|'
         r'(?:\(|\[|;)\s*(\b\w{2}\b(?:-\b\w{2}\b)?)\s*(?:\]|\)|;)'
@@ -65,6 +82,8 @@
         self.browsers = [(b, re.compile(self._browser_version_re % a))
                          for a, b in self.browsers]
 
+        self.cpus = [(b, re.compile(self._cpu_re % a, re.I)) for a,b in self.cpus]
+
     def __call__(self, user_agent):
         for platform, regex in self.platforms:
             match = regex.search(user_agent)
@@ -79,12 +98,20 @@
                 break
         else:
             browser = version = None
+
+        for cpu, regex in self.cpus:
+            match = regex.search(user_agent)
+            if match is not None:
+              break
+        else:
+            cpu = None
+
         match = self._language_re.search(user_agent)
         if match is not None:
             language = match.group(1) or match.group(2)
         else:
             language = None
-        return platform, browser, version, language
+        return platform, browser, version, language, cpu
 
 
 class UserAgent(object):
@@ -105,6 +132,7 @@
        -   `amiga`
        -   `android`
        -   `bsd`
+       -   `dragonfly`
        -   `hpux`
        -   `iphone`
        -   `irix`
@@ -125,6 +153,7 @@
         -   `camino`
         -   `chrome`
         -   `firefox`
+        -   `midori`
         -   `galeon`
         -   `google` *
         -   `kmeleon`
@@ -157,7 +186,7 @@
         if isinstance(environ_or_string, dict):
             environ_or_string = environ_or_string.get('HTTP_USER_AGENT', '')
         self.string = environ_or_string
-        self.platform, self.browser, self.version, self.language = \
+        self.platform, self.browser, self.version, self.language, self.cpu = \
             self._parser(environ_or_string)
 
     def to_header(self):
